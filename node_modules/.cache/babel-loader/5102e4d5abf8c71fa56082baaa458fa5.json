{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder\\\\my-app\\\\src\\\\components\\\\Search.jsx\";\nimport React from 'react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction placesTypeahead(element, apiKey) {\n  if (!element) {\n    _error('you must a DOM input element as first parameter');\n  }\n\n  if (!_script) {\n    if (!apiKey) {\n      _error('you must provide an Google Maps API key as second parameter');\n    }\n\n    _script = document.createElement('script');\n    document.body.appendChild(_script);\n    _script.src = 'https://maps.googleapis.com/maps/api/js?key=' + apiKey + '&libraries=places';\n    _script.async = true;\n\n    _script.addEventListener('load', function () {\n      _scriptIsLoaded = true;\n    });\n  }\n\n  _initWhenLoaded(element);\n}\n\nfunction _error(message) {\n  throw new Error('PlacesTypeahead Error: ' + message);\n}\n\nfunction _initWhenLoaded(element) {\n  if (_scriptIsLoaded) {\n    _init(element);\n  } else {\n    _script.addEventListener('load', function () {\n      _init(element);\n    });\n  }\n}\n\nfunction _init(element) {\n  var autocomplete = new google.maps.places.Autocomplete(element, {\n    types: ['geocode']\n  });\n  autocomplete.addListener('place_changed', function () {\n    var addressComponents = autocomplete.getPlace().address_components;\n    var data = {\n      country: _extractComponent(addressComponents, 'country'),\n      state: _extractComponent(addressComponents, 'administrative_area_level_1'),\n      city: _extractComponent(addressComponents, 'locality'),\n      postal_code: _extractComponent(addressComponents, 'postal_code'),\n      street: _extractComponent(addressComponents, 'route'),\n      street_number: _extractComponent(addressComponents, 'street_number')\n    };\n    element.dispatchEvent(new CustomEvent('place_changed_custom', {\n      detail: data\n    }));\n  });\n}\n\nfunction Search() {\n  return /*#__PURE__*/_jsxDEV(GooglePlacesAutocomplete, {\n    apiKey: \"AIzaSyAyesbQMyKVVbBgKVi2g6VX7mop2z96jBo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this) // <input type='text' placeholder='Enter your location...' class='places-input'/>\n  ;\n}\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["E:/New folder/my-app/src/components/Search.jsx"],"names":["React","GooglePlacesAutocomplete","placesTypeahead","element","apiKey","_error","_script","document","createElement","body","appendChild","src","async","addEventListener","_scriptIsLoaded","_initWhenLoaded","message","Error","_init","autocomplete","google","maps","places","Autocomplete","types","addListener","addressComponents","getPlace","address_components","data","country","_extractComponent","state","city","postal_code","street","street_number","dispatchEvent","CustomEvent","detail","Search"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,wBAAP,MAAqC,kCAArC;;;AAEA,SAASC,eAAT,CAAyBC,OAAzB,EAAkCC,MAAlC,EAA0C;AACtC,MAAI,CAACD,OAAL,EAAc;AACRE,IAAAA,MAAM,CAAC,iDAAD,CAAN;AACH;;AACL,MAAI,CAACC,OAAL,EAAc;AACV,QAAI,CAACF,MAAL,EAAa;AACVC,MAAAA,MAAM,CAAC,6DAAD,CAAN;AACF;;AACDC,IAAAA,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAV;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,OAA1B;AACAA,IAAAA,OAAO,CAACK,GAAR,GAAc,iDAAiDP,MAAjD,GAA0D,mBAAxE;AACAE,IAAAA,OAAO,CAACM,KAAR,GAAgB,IAAhB;;AACMN,IAAAA,OAAO,CAACO,gBAAR,CAAyB,MAAzB,EAAiC,YAAW;AACtCC,MAAAA,eAAe,GAAG,IAAlB;AACH,KAFH;AAGT;;AACGC,EAAAA,eAAe,CAACZ,OAAD,CAAf;AACL;;AAED,SAASE,MAAT,CAAgBW,OAAhB,EAAyB;AACrB,QAAM,IAAIC,KAAJ,CAAU,4BAA4BD,OAAtC,CAAN;AACH;;AAED,SAASD,eAAT,CAAyBZ,OAAzB,EAAkC;AACjC,MAAIW,eAAJ,EAAqB;AACpBI,IAAAA,KAAK,CAACf,OAAD,CAAL;AACA,GAFD,MAEO;AACNG,IAAAA,OAAO,CAACO,gBAAR,CAAyB,MAAzB,EAAiC,YAAW;AAC3CK,MAAAA,KAAK,CAACf,OAAD,CAAL;AACA,KAFD;AAGA;AACD;;AAED,SAASe,KAAT,CAAef,OAAf,EAAwB;AACvB,MAAIgB,YAAY,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CAAoCpB,OAApC,EAA6C;AAAEqB,IAAAA,KAAK,EAAE,CAAC,SAAD;AAAT,GAA7C,CAAnB;AACAL,EAAAA,YAAY,CAACM,WAAb,CAAyB,eAAzB,EAA0C,YAAW;AACpD,QAAIC,iBAAiB,GAAGP,YAAY,CAACQ,QAAb,GAAwBC,kBAAhD;AACA,QAAIC,IAAI,GAAG;AACVC,MAAAA,OAAO,EAAEC,iBAAiB,CAACL,iBAAD,EAAoB,SAApB,CADhB;AAEVM,MAAAA,KAAK,EAAED,iBAAiB,CAACL,iBAAD,EAAoB,6BAApB,CAFd;AAGVO,MAAAA,IAAI,EAAEF,iBAAiB,CAACL,iBAAD,EAAoB,UAApB,CAHb;AAIVQ,MAAAA,WAAW,EAAEH,iBAAiB,CAACL,iBAAD,EAAoB,aAApB,CAJpB;AAKVS,MAAAA,MAAM,EAAEJ,iBAAiB,CAACL,iBAAD,EAAoB,OAApB,CALf;AAMVU,MAAAA,aAAa,EAAEL,iBAAiB,CAACL,iBAAD,EAAoB,eAApB;AANtB,KAAX;AAQAvB,IAAAA,OAAO,CAACkC,aAAR,CAAsB,IAAIC,WAAJ,CAAgB,sBAAhB,EAAwC;AAAEC,MAAAA,MAAM,EAAEV;AAAV,KAAxC,CAAtB;AACA,GAXD;AAYA;;AAGD,SAASW,MAAT,GAAkB;AAChB,sBACE,QAAC,wBAAD;AACA,IAAA,MAAM,EAAC;AADP;AAAA;AAAA;AAAA;AAAA,UADF,CAKE;AALF;AAOD;;KARQA,M;AAUT,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\r\n\r\nfunction placesTypeahead(element, apiKey) {\r\n    if (!element) {\r\n          _error('you must a DOM input element as first parameter');\r\n      }\r\n  if (!_script) {\r\n      if (!apiKey) {\r\n         _error('you must provide an Google Maps API key as second parameter');\r\n      }\r\n      _script = document.createElement('script');\r\n      document.body.appendChild(_script);\r\n      _script.src = 'https://maps.googleapis.com/maps/api/js?key=' + apiKey + '&libraries=places';\r\n      _script.async = true;\r\n            _script.addEventListener('load', function() {\r\n                  _scriptIsLoaded = true;\r\n              });\r\n  }\r\n      _initWhenLoaded(element);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n}\r\n\r\nfunction _error(message) {\r\n    throw new Error('PlacesTypeahead Error: ' + message);\t\t\r\n}\t\t\t\r\n\t\r\nfunction _initWhenLoaded(element) {\r\n\tif (_scriptIsLoaded) {\r\n\t\t_init(element);\r\n\t} else {\r\n\t\t_script.addEventListener('load', function() {\r\n\t\t\t_init(element);\r\n\t\t});\r\n\t}\r\n}\t\r\n\r\nfunction _init(element) {\r\n\tvar autocomplete = new google.maps.places.Autocomplete(element, { types: ['geocode']});\r\n\tautocomplete.addListener('place_changed', function() {\r\n\t\tvar addressComponents = autocomplete.getPlace().address_components;\r\n\t\tvar data = {\r\n\t\t\tcountry: _extractComponent(addressComponents, 'country'),\r\n\t\t\tstate: _extractComponent(addressComponents, 'administrative_area_level_1'),\r\n\t\t\tcity: _extractComponent(addressComponents, 'locality'),\r\n\t\t\tpostal_code: _extractComponent(addressComponents, 'postal_code'),\r\n\t\t\tstreet: _extractComponent(addressComponents, 'route'),\r\n\t\t\tstreet_number: _extractComponent(addressComponents, 'street_number')\r\n\t\t};\r\n\t\telement.dispatchEvent(new CustomEvent('place_changed_custom', { detail: data }));\r\n\t});\r\n}\r\n\t\r\n\r\nfunction Search() {\r\n  return (\r\n    <GooglePlacesAutocomplete\r\n    apiKey=\"AIzaSyAyesbQMyKVVbBgKVi2g6VX7mop2z96jBo\"\r\n  />\r\n\r\n    // <input type='text' placeholder='Enter your location...' class='places-input'/>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}