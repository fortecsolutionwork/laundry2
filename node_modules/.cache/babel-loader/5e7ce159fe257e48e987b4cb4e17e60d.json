{"ast":null,"code":"var _jsxFileName = \"D:\\\\mk\\\\my-app\\\\my-app\\\\src\\\\components\\\\Map.jsx\";\nimport React from \"react\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport Geocode from \"react-geocode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  height: \"100vh\",\n  width: \"100%\"\n};\nGeocode.setApiKey('AIzaSyCXTkpYxVyKe1b4YEg2nwlszp1mme595ko');\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"in\");\nGeocode.enableDebug();\n\nfunction Map() {\n  this.state = {\n    location: {\n      lat: 20.5937,\n      lng: 78.9629\n    },\n    address: \"\",\n    search: \"\",\n    viewInfo: false,\n    copied: false // markers: [],\n\n  };\n\n  handleChange = search => {\n    this.setState({\n      location: this.state.location,\n      search: search\n    });\n  };\n\n  handleSelect = newAddress => {\n    this.setState({\n      location: this.state.location,\n      search: newAddress\n    });\n    geocodeByAddress(newAddress).then(results => getLatLng(results[0])).then(latLng => {\n      this.setState({\n        location: latLng,\n        address: this.state.address\n      });\n      this.getAddress();\n    }).catch(error => console.error(\"Error\", error));\n  };\n\n  getAddress = () => {\n    Geocode.fromLatLng(this.state.location.lat, this.state.location.lng).then(response => {\n      const address = response.results[0].formatted_address;\n      this.setState({ ...this.state,\n        address: address,\n        copied: false\n      });\n    }, error => {\n      console.error(error);\n    });\n  };\n\n  onMarkerDragEnd = e => {\n    const lat = e.latLng.lat();\n    const lng = e.latLng.lng();\n    this.setState({\n      location: {\n        lat,\n        lng\n      },\n      copied: false\n    });\n    this.getAddress();\n  };\n\n  function componentDidMount() {\n    if (!navigator.geolocation) {\n      alert(\"Allow to track your loaction\");\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        location: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        },\n        markers: [{\n          text: \"Current Location\",\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }]\n      });\n      this.getAddress();\n    }, error => {\n      alert(JSON.stringify(error));\n    }, {\n      enableHighAccuracy: true,\n      timeout: 20000,\n      maximumAge: 1000\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyCXTkpYxVyKe1b4YEg2nwlszp1mme595ko&libraries=places\",\n      children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapStyles,\n        zoom: 16,\n        center: this.state.location // onClick={({latLng}) => {\n        // \tGeocode.fromLatLng(latLng.lat(), latLng.lng()).then(\n        // \t\t(response) => {\n        // \t\t\tconst address = response.results[0].formatted_address;\n        // \t\t\tthis.setState({\n        // \t\t\t\t...this.state,\n        // \t\t\t\tmarkers: [\n        // \t\t\t\t\t...this.state.markers,\n        // \t\t\t\t\t{text: address, lat: latLng.lat(), lng: latLng.lng()},\n        // \t\t\t\t],\n        // \t\t\t});\n        // \t\t},\n        // \t\t(error) => {\n        // \t\t\tconsole.error(error);\n        // \t\t},\n        // \t);\n        // }}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          onClick: () => this.setState({ ...this.state,\n            viewInfo: true\n          }),\n          position: this.state.location,\n          draggable: true,\n          onDragEnd: e => this.onMarkerDragEnd(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }, this), this.state.viewInfo ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: this.state.location,\n          onCloseClick: () => this.setState({ ...this.state,\n            viewInfo: false\n          }),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 8\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n        value: this.state.search,\n        onChange: this.handleChange,\n        onSelect: this.handleSelect,\n        children: _ref => {\n          let {\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App__input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n                placeholder: \"Search Places ...\",\n                className: \"location-search-input\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"autocomplete-dropdown-container\",\n              children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"bold\",\n                  textAlign: \"center\"\n                },\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 11\n              }, this), suggestions.map((suggestion, index) => {\n                const className = suggestion.active ? \"suggestion-active\" : \"suggestion-item\";\n                const style = suggestion.active ? {\n                  backgroundColor: \"#fafafa\",\n                  cursor: \"pointer\"\n                } : {\n                  backgroundColor: \"#ffffff\",\n                  cursor: \"pointer\"\n                };\n                return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                    className,\n                    style\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: suggestion.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 13\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 12\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 8\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App__Address\",\n        children: [this.state.address.length === 0 ? \"This Site request a location Access,Enable it to get your current Location\" : this.state.address, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App__copy\",\n          onClick: () => {\n            navigator.clipboard.writeText(this.state.address);\n            this.setState({ ...this.state,\n              copied: true\n            });\n          },\n          children: this.state.copied ? \"Address Copied to Clipboard\" : \"click here to copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_c = Map;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["D:/mk/my-app/my-app/src/components/Map.jsx"],"names":["React","GoogleMap","LoadScript","Marker","InfoWindow","PlacesAutocomplete","geocodeByAddress","getLatLng","Geocode","mapStyles","height","width","setApiKey","setLanguage","setRegion","enableDebug","Map","state","location","lat","lng","address","search","viewInfo","copied","handleChange","setState","handleSelect","newAddress","then","results","latLng","getAddress","catch","error","console","fromLatLng","response","formatted_address","onMarkerDragEnd","e","componentDidMount","navigator","geolocation","alert","getCurrentPosition","position","coords","latitude","longitude","markers","text","JSON","stringify","enableHighAccuracy","timeout","maximumAge","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","fontSize","textAlign","map","suggestion","index","active","style","backgroundColor","cursor","description","length","clipboard","writeText","App"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n\tGoogleMap,\r\n\tLoadScript,\r\n\tMarker,\r\n\tInfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport PlacesAutocomplete, {\r\n\tgeocodeByAddress,\r\n\tgetLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst mapStyles = {\r\n\theight: \"100vh\",\r\n\twidth: \"100%\",\r\n};\r\n\r\nGeocode.setApiKey('AIzaSyCXTkpYxVyKe1b4YEg2nwlszp1mme595ko');\r\nGeocode.setLanguage(\"en\");\r\nGeocode.setRegion(\"in\");\r\nGeocode.enableDebug();\r\n\r\nfunction Map(){\r\n\r\n\t\tthis.state = {\r\n\t\t\tlocation: {\r\n\t\t\t\tlat: 20.5937,\r\n\t\t\t\tlng: 78.9629,\r\n\t\t\t},\r\n\t\t\taddress: \"\",\r\n\t\t\tsearch: \"\",\r\n\t\t\tviewInfo: false,\r\n\t\t\tcopied: false,\r\n\t\t\t// markers: [],\r\n\t\t};\r\n\r\n\thandleChange = (search) => {\r\n\t\tthis.setState({location: this.state.location, search: search});\r\n\t};\r\n\r\n\thandleSelect = (newAddress) => {\r\n\t\tthis.setState({location: this.state.location, search: newAddress});\r\n\t\tgeocodeByAddress(newAddress)\r\n\t\t\t.then((results) => getLatLng(results[0]))\r\n\t\t\t.then((latLng) => {\r\n\t\t\t\tthis.setState({location: latLng, address: this.state.address});\r\n\t\t\t\tthis.getAddress();\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.error(\"Error\", error));\r\n\t};\r\n\r\n\tgetAddress = () => {\r\n\t\tGeocode.fromLatLng(this.state.location.lat, this.state.location.lng).then(\r\n\t\t\t(response) => {\r\n\t\t\t\tconst address = response.results[0].formatted_address;\r\n\t\t\t\tthis.setState({...this.state, address: address, copied: false});\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t},\r\n\t\t);\r\n\t};\r\n\r\n\tonMarkerDragEnd = (e) => {\r\n\t\tconst lat = e.latLng.lat();\r\n\t\tconst lng = e.latLng.lng();\r\n\t\tthis.setState({location: {lat, lng}, copied: false});\r\n\t\tthis.getAddress();\r\n\t};\r\n\r\n\tfunction componentDidMount() {\r\n\t\tif (!navigator.geolocation) {\r\n\t\t\talert(\"Allow to track your loaction\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnavigator.geolocation.getCurrentPosition(\r\n\t\t\t(position) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tlocation: {\r\n\t\t\t\t\t\tlat: position.coords.latitude,\r\n\t\t\t\t\t\tlng: position.coords.longitude,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmarkers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttext: \"Current Location\",\r\n\t\t\t\t\t\t\tlat: position.coords.latitude,\r\n\t\t\t\t\t\t\tlng: position.coords.longitude,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.getAddress();\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\talert(JSON.stringify(error));\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tenableHighAccuracy: true,\r\n\t\t\t\ttimeout: 20000,\r\n\t\t\t\tmaximumAge: 1000,\r\n\t\t\t},\r\n\t\t);\r\n\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<LoadScript googleMapsApiKey='AIzaSyCXTkpYxVyKe1b4YEg2nwlszp1mme595ko&libraries=places'>\r\n\t\t\t\t\t<GoogleMap\r\n\t\t\t\t\t\tmapContainerStyle={mapStyles}\r\n\t\t\t\t\t\tzoom={16}\r\n\t\t\t\t\t\tcenter={this.state.location}\r\n\t\t\t\t\t\t// onClick={({latLng}) => {\r\n\t\t\t\t\t\t// \tGeocode.fromLatLng(latLng.lat(), latLng.lng()).then(\r\n\t\t\t\t\t\t// \t\t(response) => {\r\n\t\t\t\t\t\t// \t\t\tconst address = response.results[0].formatted_address;\r\n\t\t\t\t\t\t// \t\t\tthis.setState({\r\n\t\t\t\t\t\t// \t\t\t\t...this.state,\r\n\t\t\t\t\t\t// \t\t\t\tmarkers: [\r\n\t\t\t\t\t\t// \t\t\t\t\t...this.state.markers,\r\n\t\t\t\t\t\t// \t\t\t\t\t{text: address, lat: latLng.lat(), lng: latLng.lng()},\r\n\t\t\t\t\t\t// \t\t\t\t],\r\n\t\t\t\t\t\t// \t\t\t});\r\n\t\t\t\t\t\t// \t\t},\r\n\t\t\t\t\t\t// \t\t(error) => {\r\n\t\t\t\t\t\t// \t\t\tconsole.error(error);\r\n\t\t\t\t\t\t// \t\t},\r\n\t\t\t\t\t\t// \t);\r\n\t\t\t\t\t\t// }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\tonClick={() => this.setState({...this.state, viewInfo: true})}\r\n\t\t\t\t\t\t\tposition={this.state.location}\r\n\t\t\t\t\t\t\tdraggable={true}\r\n\t\t\t\t\t\t\tonDragEnd={(e) => this.onMarkerDragEnd(e)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/* {this.state.markers.map((mark, index) => {\r\n\t\t\t\t\t\t\t// if (index)\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t// onClick={() => this.setState({...this.state, viewInfo: true})}\r\n\t\t\t\t\t\t\t\t\tposition={{lat: mark.lat, lng: mark.lng}}\r\n\t\t\t\t\t\t\t\t\t// draggable={true}\r\n\t\t\t\t\t\t\t\t\t// onDragEnd={(e) => this.onMarkerDragEnd(e)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})} */}\r\n\t\t\t\t\t\t{this.state.viewInfo ? (\r\n\t\t\t\t\t\t\t<InfoWindow\r\n\t\t\t\t\t\t\t\tposition={this.state.location}\r\n\t\t\t\t\t\t\t\tonCloseClick={() =>\r\n\t\t\t\t\t\t\t\t\tthis.setState({...this.state, viewInfo: false})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<p>{this.state.address}</p>\r\n\t\t\t\t\t\t\t</InfoWindow>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</GoogleMap>\r\n\t\t\t\t\t<PlacesAutocomplete\r\n\t\t\t\t\t\tvalue={this.state.search}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tonSelect={this.handleSelect}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\tgetInputProps,\r\n\t\t\t\t\t\t\tsuggestions,\r\n\t\t\t\t\t\t\tgetSuggestionItemProps,\r\n\t\t\t\t\t\t\tloading,\r\n\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t<div className='App__input'>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t{...getInputProps({\r\n\t\t\t\t\t\t\t\t\t\tplaceholder: \"Search Places ...\",\r\n\t\t\t\t\t\t\t\t\t\tclassName: \"location-search-input\",\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div className='autocomplete-dropdown-container'>\r\n\t\t\t\t\t\t\t\t\t{loading && (\r\n\t\t\t\t\t\t\t\t\t\t<div style={{fontSize: \"bold\", textAlign: \"center\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\tLoading...\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{suggestions.map((suggestion, index) => {\r\n\t\t\t\t\t\t\t\t\t\tconst className = suggestion.active\r\n\t\t\t\t\t\t\t\t\t\t\t? \"suggestion-active\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"suggestion-item\";\r\n\t\t\t\t\t\t\t\t\t\tconst style = suggestion.active\r\n\t\t\t\t\t\t\t\t\t\t\t? {backgroundColor: \"#fafafa\", cursor: \"pointer\"}\r\n\t\t\t\t\t\t\t\t\t\t\t: {backgroundColor: \"#ffffff\", cursor: \"pointer\"};\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...getSuggestionItemProps(suggestion, {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle,\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{suggestion.description}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</PlacesAutocomplete>\r\n\t\t\t\t\t<div className='App__Address'>\r\n\t\t\t\t\t\t{this.state.address.length === 0\r\n\t\t\t\t\t\t\t? \"This Site request a location Access,Enable it to get your current Location\"\r\n\t\t\t\t\t\t\t: this.state.address}\r\n\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName='App__copy'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(this.state.address);\r\n\t\t\t\t\t\t\t\tthis.setState({...this.state, copied: true});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{this.state.copied\r\n\t\t\t\t\t\t\t\t? \"Address Copied to Clipboard\"\r\n\t\t\t\t\t\t\t\t: \"click here to copy\"}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</LoadScript>\r\n\t\t\t</>\r\n\t\t);\r\n\t\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}