{"ast":null,"code":"var _jsxFileName = \"D:\\\\mk\\\\my-app\\\\my-app\\\\src\\\\components\\\\Map.jsx\";\nimport React from \"react\";\nimport ImgLocation from '../images/location.png';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport Geocode from \"react-geocode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  height: \"100vh\",\n  width: \"100%\"\n};\nGeocode.setApiKey('AIzaSyCXTkpYxVyKe1b4YEg2nwlszp1mme595ko');\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"in\");\nGeocode.enableDebug();\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = search => {\n      this.setState({\n        location: this.state.location,\n        search: search\n      });\n    };\n\n    this.handleSelect = newAddress => {\n      let fields = newAddress;\n      let errors = {};\n      let formIsValid = true;\n\n      if (!fields) {\n        let formIsValid = false;\n        errors[\"newAddress\"] = \"Cannot be empty\";\n        console.log(errors);\n        alert(\"Cannot be empty\");\n      }\n\n      localStorage.setItem('newAddress', newAddress);\n      this.setState({\n        location: this.state.location,\n        search: newAddress\n      });\n      geocodeByAddress(newAddress).then(results => getLatLng(results[0])).then(latLng => {\n        this.setState({\n          location: latLng,\n          address: this.state.address\n        });\n        this.getAddress();\n      }).catch(error => console.error(\"Error\", error));\n    };\n\n    this.getAddress = () => {\n      Geocode.fromLatLng(this.state.location.lat, this.state.location.lng).then(response => {\n        const address = response.results[0].formatted_address;\n        this.setState({ ...this.state,\n          address: address,\n          copied: false\n        });\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.onMarkerDragEnd = e => {\n      const lat = e.latLng.lat();\n      const lng = e.latLng.lng();\n      this.setState({\n        location: {\n          lat,\n          lng\n        },\n        copied: false\n      });\n      this.getAddress();\n    };\n\n    this.state = {\n      location: {\n        lat: 20.5937,\n        lng: 78.9629\n      },\n      address: \"\",\n      search: \"\",\n      errors: {},\n      viewInfo: false,\n      copied: false // markers: [],\n\n    };\n  }\n\n  componentDidMount() {\n    if (!navigator.geolocation) {\n      alert(\"Allow to track your loaction\");\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        location: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        },\n        markers: [{\n          text: \"Current Location\",\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }]\n      });\n      this.getAddress();\n    }, error => {\n      alert(JSON.stringify(error));\n    }, {\n      enableHighAccuracy: true,\n      timeout: 20000,\n      maximumAge: 1000\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(LoadScript, {\n        googleMapsApiKey: \"AIzaSyCXTkpYxVyKe1b4YEg2nwlszp1mme595ko&libraries=places\",\n        children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n          value: this.state.search,\n          onChange: this.handleChange,\n          onSelect: this.handleSelect,\n          children: _ref => {\n            let {\n              getInputProps,\n              suggestions,\n              getSuggestionItemProps,\n              loading\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App__input\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n                    placeholder: \"Search Places ...\",\n                    className: \"location-search-input\"\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"autocomplete-dropdown-container\",\n                  children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: \"bold\",\n                      textAlign: \"center\"\n                    },\n                    children: \"Loading...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 11\n                  }, this), suggestions.map((suggestion, index) => {\n                    const className = suggestion.active ? \"suggestion-active\" : \"suggestion-item\";\n                    const style = suggestion.active ? {\n                      backgroundColor: \"#fafafa\",\n                      cursor: \"pointer\"\n                    } : {\n                      backgroundColor: \"#222\",\n                      cursor: \"pointer\"\n                    };\n                    return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                        className,\n                        style\n                      }),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"location-img-wrapper\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            className: \"location-img\",\n                            src: ImgLocation\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 178,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 178,\n                          columnNumber: 19\n                        }, this), suggestion.description]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 13\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 12\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"30px\",\n                  height: \"30px\",\n                  viewBox: \"0 0 22 22\",\n                  version: \"1.1\",\n                  children: /*#__PURE__*/_jsxDEV(\"g\", {\n                    id: \"Icons\",\n                    stroke: \"none\",\n                    \"stroke-width\": \"1\",\n                    fill: \"none\",\n                    \"fill-rule\": \"evenodd\",\n                    children: /*#__PURE__*/_jsxDEV(\"g\", {\n                      id: \"Outlined\",\n                      transform: \"translate(-543.000000, -1749.000000)\",\n                      children: /*#__PURE__*/_jsxDEV(\"g\", {\n                        id: \"Device\",\n                        transform: \"translate(100.000000, 1650.000000)\",\n                        children: /*#__PURE__*/_jsxDEV(\"g\", {\n                          id: \"Outlined-/-Device-/-gps_fixed\",\n                          transform: \"translate(442.000000, 98.000000)\",\n                          children: /*#__PURE__*/_jsxDEV(\"g\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"polygon\", {\n                              id: \"Path\",\n                              points: \"0 0 24 0 24 24 0 24\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 190,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                              d: \"M12,8 C9.79,8 8,9.79 8,12 C8,14.21 9.79,16 12,16 C14.21,16 16,14.21 16,12 C16,9.79 14.21,8 12,8 Z M20.94,11 C20.48,6.83 17.17,3.52 13,3.06 L13,1 L11,1 L11,3.06 C6.83,3.52 3.52,6.83 3.06,11 L1,11 L1,13 L3.06,13 C3.52,17.17 6.83,20.48 11,20.94 L11,23 L13,23 L13,20.94 C17.17,20.48 20.48,17.17 20.94,13 L23,13 L23,11 L20.94,11 Z M12,19 C8.13,19 5,15.87 5,12 C5,8.13 8.13,5 12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 Z\",\n                              id: \"\\uD83D\\uDD39-Icon-Color\",\n                              fill: \"#8f8f8f\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 191,\n                              columnNumber: 73\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 189,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 188,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: this.state.errors[\"newAddress\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["D:/mk/my-app/my-app/src/components/Map.jsx"],"names":["React","ImgLocation","GoogleMap","LoadScript","Marker","InfoWindow","PlacesAutocomplete","geocodeByAddress","getLatLng","Geocode","mapStyles","height","width","setApiKey","setLanguage","setRegion","enableDebug","Map","Component","constructor","props","handleChange","search","setState","location","state","handleSelect","newAddress","fields","errors","formIsValid","console","log","alert","localStorage","setItem","then","results","latLng","address","getAddress","catch","error","fromLatLng","lat","lng","response","formatted_address","copied","onMarkerDragEnd","e","viewInfo","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","markers","text","JSON","stringify","enableHighAccuracy","timeout","maximumAge","render","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","fontSize","textAlign","map","suggestion","index","active","style","backgroundColor","cursor","description","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ImgLocation from '../images/location.png';\r\nimport {\r\n\tGoogleMap,\r\n\tLoadScript,\r\n\tMarker,\r\n\tInfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport PlacesAutocomplete, {\r\n\tgeocodeByAddress,\r\n\tgetLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst mapStyles = {\r\n\theight: \"100vh\",\r\n\twidth: \"100%\",\r\n};\r\n\r\nGeocode.setApiKey('AIzaSyCXTkpYxVyKe1b4YEg2nwlszp1mme595ko');\r\nGeocode.setLanguage(\"en\");\r\nGeocode.setRegion(\"in\");\r\nGeocode.enableDebug();\r\n\r\n\r\nclass Map extends React.Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tlocation: {\r\n\t\t\t\tlat: 20.5937,\r\n\t\t\t\tlng: 78.9629,\r\n\t\t\t},\r\n\t\t\taddress: \"\",\r\n\t\t\tsearch: \"\",\r\n\t\t\terrors: {},\r\n\t\t\tviewInfo: false,\r\n\t\t\tcopied: false,\r\n\t\t\t// markers: [],\r\n\r\n\t\t\t\r\n\t\t};\r\n\t\r\n\r\n\t}\r\n\thandleChange = (search) => {\r\n\t\tthis.setState({location: this.state.location, search: search});\r\n\t};\r\n\t//console.log(newData)\r\n\r\n\thandleSelect = (newAddress) => {\r\n\t\tlet fields = newAddress;\r\n\t\tlet errors = {}\r\n\t\t let formIsValid = true;\r\n\t\t if (!fields) {\r\n\t\t\tlet formIsValid = false;\r\n\t\t\terrors[\"newAddress\"] = \"Cannot be empty\";\r\n\t\t\tconsole.log(errors);\r\n\r\n\t\t\talert(\"Cannot be empty\");\r\n\t\t  }\r\n\t\t  \r\n\t\tlocalStorage.setItem('newAddress', newAddress);\r\n\t\tthis.setState({location: this.state.location, search: newAddress});\r\n\t\tgeocodeByAddress(newAddress)\r\n\t\t\t.then((results) => getLatLng(results[0]))\r\n\t\t\t.then((latLng) => {\r\n\t\t\t\tthis.setState({location: latLng, address: this.state.address});\r\n\t\t\t\tthis.getAddress();\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.error(\"Error\", error));\r\n\t};\r\n\r\n\tgetAddress = () => {\r\n\t\tGeocode.fromLatLng(this.state.location.lat, this.state.location.lng).then(\r\n\t\t\t(response) => {\r\n\t\t\t\tconst address = response.results[0].formatted_address;\r\n\t\t\t\tthis.setState({...this.state, address: address, copied: false});\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t},\r\n\t\t);\r\n\t};\r\n\r\n\tonMarkerDragEnd = (e) => {\r\n\t\tconst lat = e.latLng.lat();\r\n\t\tconst lng = e.latLng.lng();\r\n\t\tthis.setState({location: {lat, lng}, copied: false});\r\n\t\tthis.getAddress();\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!navigator.geolocation) {\r\n\t\t\talert(\"Allow to track your loaction\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tnavigator.geolocation.getCurrentPosition(\r\n\t\t\t(position) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tlocation: {\r\n\t\t\t\t\t\tlat: position.coords.latitude,\r\n\t\t\t\t\t\tlng: position.coords.longitude,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmarkers: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttext: \"Current Location\",\r\n\t\t\t\t\t\t\tlat: position.coords.latitude,\r\n\t\t\t\t\t\t\tlng: position.coords.longitude,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.getAddress();\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\talert(JSON.stringify(error));\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tenableHighAccuracy: true,\r\n\t\t\t\ttimeout: 20000,\r\n\t\t\t\tmaximumAge: 1000,\r\n\t\t\t},\r\n\t\t);\r\n\t\t\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<LoadScript googleMapsApiKey='AIzaSyCXTkpYxVyKe1b4YEg2nwlszp1mme595ko&libraries=places'>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<PlacesAutocomplete\r\n\t\t\t\t\t\tvalue={this.state.search}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tonSelect={this.handleSelect}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\tgetInputProps,\r\n\t\t\t\t\t\t\tsuggestions,\r\n\t\t\t\t\t\t\tgetSuggestionItemProps,\r\n\t\t\t\t\t\t\tloading,\r\n\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div className='App__input'>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t{...getInputProps({\r\n\t\t\t\t\t\t\t\t\t\tplaceholder: \"Search Places ...\",\r\n\t\t\t\t\t\t\t\t\t\tclassName: \"location-search-input\",\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div className='autocomplete-dropdown-container'>\r\n\t\t\t\t\t\t\t\t\t{loading && (\r\n\t\t\t\t\t\t\t\t\t\t<div style={{fontSize: \"bold\", textAlign: \"center\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\tLoading...\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{suggestions.map((suggestion, index) => {\r\n\t\t\t\t\t\t\t\t\t\tconst className = suggestion.active\r\n\t\t\t\t\t\t\t\t\t\t\t? \"suggestion-active\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"suggestion-item\";\r\n\t\t\t\t\t\t\t\t\t\tconst style = suggestion.active\r\n\t\t\t\t\t\t\t\t\t\t\t? {backgroundColor: \"#fafafa\", cursor: \"pointer\"}\r\n\t\t\t\t\t\t\t\t\t\t\t: {backgroundColor: \"#222\", cursor: \"pointer\"};\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...getSuggestionItemProps(suggestion, {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle,\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span><div className=\"location-img-wrapper\"><img className=\"location-img\" src={ImgLocation} /></div>{suggestion.description}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<svg width=\"30px\" height=\"30px\" viewBox=\"0 0 22 22\" version=\"1.1\">\r\n                                                    <g id=\"Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n                                                        <g id=\"Outlined\" transform=\"translate(-543.000000, -1749.000000)\">\r\n                                                            <g id=\"Device\" transform=\"translate(100.000000, 1650.000000)\">\r\n                                                                <g id=\"Outlined-/-Device-/-gps_fixed\" transform=\"translate(442.000000, 98.000000)\">\r\n                                                                    <g>\r\n                                                                        <polygon id=\"Path\" points=\"0 0 24 0 24 24 0 24\"></polygon>\r\n                                                                        <path d=\"M12,8 C9.79,8 8,9.79 8,12 C8,14.21 9.79,16 12,16 C14.21,16 16,14.21 16,12 C16,9.79 14.21,8 12,8 Z M20.94,11 C20.48,6.83 17.17,3.52 13,3.06 L13,1 L11,1 L11,3.06 C6.83,3.52 3.52,6.83 3.06,11 L1,11 L1,13 L3.06,13 C3.52,17.17 6.83,20.48 11,20.94 L11,23 L13,23 L13,20.94 C17.17,20.48 20.48,17.17 20.94,13 L23,13 L23,11 L20.94,11 Z M12,19 C8.13,19 5,15.87 5,12 C5,8.13 8.13,5 12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 Z\" id=\"🔹-Icon-Color\" fill=\"#8f8f8f\"></path>\r\n                                                                    </g>\r\n                                                                </g>\r\n                                                            </g>\r\n                                                        </g>\r\n                                                    </g>\r\n                                                </svg>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>{this.state.errors[\"newAddress\"]}</span>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</PlacesAutocomplete>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{/* <div className='App__Address'>\r\n\t\t\t\t\t\t{this.state.address.length === 0\r\n\t\t\t\t\t\t\t? \"This Site request a location Access,Enable it to get your current Location\"\r\n\t\t\t\t\t\t\t: this.state.address}\r\n\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName='App__copy'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(this.state.address);\r\n\t\t\t\t\t\t\t\tthis.setState({...this.state, copied: true});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{this.state.copied\r\n\t\t\t\t\t\t\t\t? \"Address Copied to Clipboard\"\r\n\t\t\t\t\t\t\t\t: \"click here to copy\"}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t</LoadScript>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}